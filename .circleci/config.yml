version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/ruby:2.6.2-node
        environment:
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          DATABASE_URL: postgres://postgres:password@localhost:5432/teamdg_test
          RAILS_ENV: test
          POSTGRES_TEST_DB: teamdg_test
          POSTGRES_TEST_USER: postgres
          POSTGRES_TEST_PASSWORD: circle_test
      - image: circleci/postgres:11-alpine
    steps:
      - checkout

      # Install dependencies for Ruby Gems
      - restore_cache:
          keys:
            - my-app-bundle-v1-{{ checksum "Gemfile.lock" }}
            - my-app-bundle-v1-

      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: my-app-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Preparing database
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:create db:schema:load --trace

      # Run test suits
      - run:
          name: Run rubocop in parallel
          command: bundle exec rubocop --parallel --config .rubocop.yml

      - run:
          name: Run rspec in parallel
          command: |
            bin/webpack &&
            bundle exec rspec --profile 10 \
                             --format RspecJunitFormatter \
                             --out /tmp/test-results/rspec.xml \
                             --format progress \
                             $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save artifacts
      - store_test_results:
          path: /tmp/test-results
  deploy:
    machine:
      enabled: true
    working_directory: ~/app
    environment:
      HEROKU_APP: "secret-sea-00303" # define env var $HEROKU_APP
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh # run a script to set up Heroku

      - run:
          command: |
              git push heroku master
              heroku run rake db:migrate
              sleep 5 # sleep for 5 seconds to wait for dynos
              heroku restart

workflows:
    version: 2
    build-and-deploy:
        jobs:
        - build
        - deploy:
            requires:
                - build
            filters:
                branches:
                    only: master
